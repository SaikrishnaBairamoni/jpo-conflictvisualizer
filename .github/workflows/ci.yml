name: CI
on: 
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches: [develop, master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          
      # - name: Cache Maven packages
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/.m2
      #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-m2
      - name: Copy the required files 
        run: |
          mkdir -p $GITHUB_WORKSPACE/api/jpo-ode/jpo-ode-common/src
          mkdir -p $GITHUB_WORKSPACE/api/jpo-ode/jpo-ode-plugins/src
          mkdir -p $GITHUB_WORKSPACE/api/jpo-ode/jpo-ode-core/src
          mkdir -p $GITHUB_WORKSPACE/api/jpo-ode/jpo-ode-svcs/src
          mkdir -p $GITHUB_WORKSPACE/api/jpo-geojsonconverter/src
          mkdir -p $GITHUB_WORKSPACE/api/jpo-conflictmonitor/src
          mkdir -p $GITHUB_WORKSPACE/api/jpo-conflictvisualizer-api/src     
          cp -r $GITHUB_WORKSPACE/api/jpo-conflictmonitor/jpo-geojsonconverter/jpo-ode/pom.xml $GITHUB_WORKSPACE/api/jpo-ode/
          cp -r $GITHUB_WORKSPACE/api/jpo-conflictmonitor/jpo-geojsonconverter/jpo-ode/jpo-ode-common/pom.xml $GITHUB_WORKSPACE/api/jpo-ode/jpo-ode-common/
          cp -r $GITHUB_WORKSPACE/api/jpo-conflictmonitor/jpo-geojsonconverter/jpo-ode/jpo-ode-common/src $GITHUB_WORKSPACE/api/jpo-ode/jpo-ode-common/
          cp -r $GITHUB_WORKSPACE/api/jpo-conflictmonitor/jpo-geojsonconverter/jpo-ode/jpo-ode-plugins/pom.xml $GITHUB_WORKSPACE/api/jpo-ode/jpo-ode-plugins/
          cp -r $GITHUB_WORKSPACE/api/jpo-conflictmonitor/jpo-geojsonconverter/jpo-ode/jpo-ode-plugins/src $GITHUB_WORKSPACE/api/jpo-ode/jpo-ode-plugins/
          cp -r $GITHUB_WORKSPACE/api/jpo-conflictmonitor/jpo-geojsonconverter/jpo-ode/jpo-ode-core/pom.xml $GITHUB_WORKSPACE/api/jpo-ode/jpo-ode-core/
          cp -r $GITHUB_WORKSPACE/api/jpo-conflictmonitor/jpo-geojsonconverter/jpo-ode/jpo-ode-core/src $GITHUB_WORKSPACE/api/jpo-ode/jpo-ode-core/
          cp -r $GITHUB_WORKSPACE/api/jpo-conflictmonitor/jpo-geojsonconverter/jpo-ode/jpo-ode-svcs/pom.xml $GITHUB_WORKSPACE/api/jpo-ode/jpo-ode-svcs/
          cp -r $GITHUB_WORKSPACE/api/jpo-conflictmonitor/jpo-geojsonconverter/jpo-ode/jpo-ode-svcs/src $GITHUB_WORKSPACE/api/jpo-ode/jpo-ode-svcs/
          cp -r $GITHUB_WORKSPACE/api/jpo-conflictmonitor/jpo-geojsonconverter/jpo-geojsonconverter/pom.xml $GITHUB_WORKSPACE/api/jpo-geojsonconverter/
          cp -r $GITHUB_WORKSPACE/api/jpo-conflictmonitor/jpo-geojsonconverter/jpo-geojsonconverter/src $GITHUB_WORKSPACE/api/jpo-geojsonconverter/
          cp -r $GITHUB_WORKSPACE/api/jpo-conflictmonitor/jpo-conflictmonitor/pom.xml $GITHUB_WORKSPACE/api/jpo-conflictmonitor/
          cp -r $GITHUB_WORKSPACE/api/jpo-conflictmonitor/jpo-conflictmonitor/src $GITHUB_WORKSPACE/api/jpo-conflictmonitor/
    
      - name: Build jpo-ode module
        run: |
          mvn -f $GITHUB_WORKSPACE/api/jpo-conflictmonitor/jpo-geojsonconverter/jpo-ode/pom.xml install -DskipTests

      - name: Build jpo-geojsonconverter module
        run: |
          mvn -f $GITHUB_WORKSPACE/api/jpo-conflictmonitor/jpo-geojsonconverter/jpo-geojsonconverter/pom.xml clean install -DskipTests

      - name: Build jpo-conflictmonitor module
        run: |
          mvn -f $GITHUB_WORKSPACE/api/jpo-conflictmonitor/jpo-conflictmonitor/pom.xml clean install -DskipTests

      - name: Package jpo-conflictvisualizer-api
        run: |
          mvn -f $GITHUB_WORKSPACE/api/jpo-conflictvisualizer-api/pom.xml clean package -DskipTests

      - name: Build and run Sonar analysis for jpo-conflictvisualizer-ap
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -f $GITHUB_WORKSPACE/api/jpo-conflictvisualizer-api/pom.xml sonar:sonar \
              -Dsonar.projectKey=usdot-jpo-ode_jpo-conflictvisualizer \
              -Dsonar.organization=usdot-jpo-ode \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # - name: Build and run Sonar analysis for jpo-conflictvisualizer-api
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: |
      #     cd $GITHUB_WORKSPACE/api/jpo-conflictvisualizer-api
      #     mvn -e -X clean org.jacoco:jacoco-maven-plugin:prepare-agent package sonar:sonar -Dsonar.projectKey=usdot-jpo-ode_jpo-conflictvisualizer -Dsonar.projectName=jpo-conflictvisualizer -Dsonar.organization=usdot-jpo-ode -Dsonar.host.url=https://sonarcloud.io -Dsonar.branch.name=$GITHUB_REF_NAME
